{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport HeaderLogo from './HeaderLogo.vue';\nexport default {\n  name: \"SignUp\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      passConditions: {\n        email: false,\n        password: false\n      }\n    };\n  },\n  watch: {\n    password() {\n      this.passwordValidation();\n    },\n    email() {\n      this.emailValidation();\n    }\n  },\n  methods: {\n    passwordValidation() {\n      let password = this.password;\n      // console.log(password)\n      let passwordRegEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n      // console.log(passwordRegEx.test(password))\n      if (passwordRegEx.test(password)) {\n        this.passConditions.password = true;\n        // console.log(this.passConditions)\n      } else {\n        this.passConditions.password = false;\n      }\n      //Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\n    },\n\n    emailValidation() {\n      let email = this.email;\n      let emailRegEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\n      if (emailRegEx.test(email)) {\n        this.passConditions.email = true;\n      } else {\n        this.passConditions.email = false;\n      }\n    },\n    SignUp() {\n      const signUpForm = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        password: this.password\n      };\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(signUpForm)\n      };\n      if (this.passConditions.password && this.passConditions.email === true) {\n        fetch(\"http://localhost:3000/api/users/signup\", requestOptions).then(response => {\n          return response.json();\n        }).then(data => {\n          console.log(data);\n          if (response.ok) {\n            // localStorage.setItem('token', res.data.token);\n            this.$router.push(\"/\");\n          }\n        }).catch(error => {\n          error: error;\n        });\n      }\n    }\n  },\n  components: {\n    HeaderLogo\n  }\n};","map":{"version":3,"mappings":";AAuBE,OAAOA,UAAS,MAAO,kBAAkB;AACzC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE;QACdF,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDE,KAAK,EAAE;IACLF,QAAQ,GAAG;MACT,IAAI,CAACG,kBAAkB,EAAC;IAC1B,CAAC;IACDJ,KAAK,GAAG;MACN,IAAI,CAACK,eAAe,EAAC;IACvB;EACF,CAAC;EAEDC,OAAO,EAAE;IACPF,kBAAkB,GAAG;MACnB,IAAIH,QAAO,GAAI,IAAI,CAACA,QAAQ;MAC5B;MACA,IAAIM,aAAY,GAAI,sEAAsE;MAC1F;MACA,IAAIA,aAAa,CAACC,IAAI,CAACP,QAAQ,CAAC,EAAE;QAChC,IAAI,CAACC,cAAc,CAACD,QAAO,GAAI,IAAG;QAClC;MACF,OAAO;QACL,IAAI,CAACC,cAAc,CAACD,QAAO,GAAI,KAAI;MACrC;MACA;IACF,CAAC;;IACDI,eAAe,GAAG;MAChB,IAAIL,KAAI,GAAI,IAAI,CAACA,KAAK;MACtB,IAAIS,UAAS,GAAI,8BAA8B;MAC/C,IAAIA,UAAU,CAACD,IAAI,CAACR,KAAK,CAAC,EAAE;QAC1B,IAAI,CAACE,cAAc,CAACF,KAAI,GAAI,IAAG;MACjC,OAAO;QACL,IAAI,CAACE,cAAc,CAACF,KAAI,GAAI,KAAI;MAClC;IACF,CAAC;IACDU,MAAM,GAAG;MACP,MAAMC,UAAS,GAAI;QACjBb,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB;MACA,MAAMW,cAAa,GAAI;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU;MACjC,CAAC;MACD,IAAI,IAAI,CAACT,cAAc,CAACD,QAAO,IAAK,IAAI,CAACC,cAAc,CAACF,KAAI,KAAM,IAAI,EAAE;QACtEkB,KAAK,CAAC,wCAAwC,EAAEN,cAAc,EAC3DO,IAAI,CAAEC,QAAQ,IAAK;UAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;QACxB,CAAC,EACAF,IAAI,CAAEtB,IAAI,IAAK;UACdyB,OAAO,CAACC,GAAG,CAAC1B,IAAI,CAAC;UACjB,IAAIuB,QAAQ,CAACI,EAAE,EAAE;YACf;YACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;UACxB;QACF,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;UAChBA,KAAK,EAAEA,KAAK;QACd,CAAC;MACH;IACF;EACF,CAAC;EAEHC,UAAU,EAAE;IACVlC;EACF;AACF","names":["HeaderLogo","name","data","firstName","lastName","email","password","passConditions","watch","passwordValidation","emailValidation","methods","passwordRegEx","test","emailRegEx","SignUp","signUpForm","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","console","log","ok","$router","push","catch","error","components"],"sourceRoot":"","sources":["/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/SignUp.vue"],"sourcesContent":["<template>\n    <div>\n      <header-logo/>\n      <div class=\"col-md-4\">\n        <form class =\"signup_form\">\n          <label for =\"firstName-input\" class = \"form-label\"></label>\n            <input type=\"text\" class=\"form-control\" id = \"signup_firstName\" placeholder=\"First Name\" maxlength=\"15\" v-model=\"firstName\" required/> \n          <label for =\"lastName-input\" class = \"form-label\"></label>\n            <input type = \"text\" class=\"form-control\" id = \"signup_lastName\" placeholder=\"Last Name\" maxlength = \"20\" v-model=\"lastName\" required />\n          <label for =\"email-input\" class = \"form-label\"></label>\n            <input type = \"text\" class=\"form-control\" id = \"signup_email\" placeholder= \"Email\" minlength=\"10\" v-on:change=\"emailValidation()\" v-model=\"email\" required />\n          <label for = \"password-input\" class = \"form-label\"></label>\n            <input type = \"text\" class=\"form-control\" id = \"signup_password\" placeholder = \"Password\" minlength=\"8\" v-on:change=\"passwordValidation()\" v-model=\"password\" required/>\n          <router-link to = \"/\">\n            <input type=\"submit\" id = \"signup_btn_2\" v-on:click =\"SignUp()\" value = \"Sign Up\"/>\n          </router-link>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  \n  <script>\n  import HeaderLogo from './HeaderLogo.vue';\n  export default {\n    name: \"SignUp\",\n    data() {\n      return {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        passConditions: {\n          email: false,\n          password: false\n        }\n      };\n    },\n    watch: {\n      password() {\n        this.passwordValidation()\n      },\n      email() {\n        this.emailValidation()\n      }\n    },\n   \n    methods: {\n      passwordValidation() {\n        let password = this.password;\n        // console.log(password)\n        let passwordRegEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n        // console.log(passwordRegEx.test(password))\n        if (passwordRegEx.test(password)) {\n          this.passConditions.password = true \n          // console.log(this.passConditions)\n        } else {\n          this.passConditions.password = false\n        }\n        //Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\n      },\n      emailValidation() {\n        let email = this.email;\n        let emailRegEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\n        if (emailRegEx.test(email)) {\n          this.passConditions.email = true \n        } else {\n          this.passConditions.email = false\n        }\n      },\n      SignUp() {\n        const signUpForm = {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email,\n          password: this.password\n        }\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n          \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(signUpForm),\n        };\n        if (this.passConditions.password && this.passConditions.email === true) {\n          fetch(\"http://localhost:3000/api/users/signup\", requestOptions)\n            .then((response) => {\n              return response.json();\n            })\n            .then((data) => {\n              console.log(data);\n              if (response.ok) {\n                // localStorage.setItem('token', res.data.token);\n                this.$router.push(\"/\");\n              }\n            })\n            .catch((error) => {\n              error: error;\n            })\n          }\n        }\n      },\n    \n    components: { \n      HeaderLogo\n    }\n  }\n  </script>\n\n<style scoped>\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\nlabel, input {\n  padding: .5rem;\n  text-align: center;\n  font-weight: 500;\n  font-size: medium;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 6rem 0 0 16rem;\n}\n#signup_btn_2 {\n  font-weight: bold;\n  font-style: normal;\n  cursor: pointer;\n  border-radius: 25px;\n  padding: .5rem;\n  width: 14rem;\n  margin: 4rem 0 0 9.7rem; \n  font-size: 18px;\n  color: black;\n  border: none;\n  box-shadow: 5px 5px 5px gray;\n  background: linear-gradient(to bottom right, #8521dd, #be5deb); \n}\n    \n@media screen and (max-width: 768px) {\n  form {\n    width: 90%;\n    margin: 1rem 0 0 1rem;\n  }\n  #signup_btn_2 {\n    margin: 1rem 0 0 3rem;\n    box-shadow: none;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}