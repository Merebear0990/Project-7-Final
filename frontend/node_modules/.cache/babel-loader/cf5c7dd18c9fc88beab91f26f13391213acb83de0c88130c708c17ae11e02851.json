{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function data() {\n    return {\n      post: {}\n    };\n  },\n  created: function created() {\n    this.getPost();\n  },\n  mounted: function mounted() {\n    this.readCheck();\n  },\n  methods: {\n    readCheck: function readCheck() {\n      if (this.post.readby != null) {\n        var check = this.post.readby.includes(JSON.parse(localStorage.getItem(\"user\")).userId);\n        console.log(check);\n        return !check;\n      }\n    },\n    getImage: function getImage() {\n      return \"/backend/images/\".concat(post.image);\n    },\n    getPost: function getPost() {\n      var _this = this;\n      var id = window.location.href.split('/').pop();\n      var requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n        }\n      };\n      fetch(\"http://localhost:3000/api/posts/one/\" + id, requestOptions).then(function (res) {\n        return res.json().then(function (data) {\n          _this.post = data[0];\n          console.log(data);\n        });\n      })[\"catch\"](function (error) {\n        console.error(\"There was an error!\", error);\n      });\n    },\n    addReadby: function addReadby() {\n      var _this2 = this;\n      var setReadby = [];\n      var userId = JSON.parse(localStorage.getItem(\"user\")).userid;\n      var id = window.location.href.split('/').pop();\n      console.log(id);\n      if (JSON.parse(localStorage.getItem(\"user\")).userid === this.userid) {\n        setReadby = {\n          readby: userId,\n          postId: id\n        };\n        var requestOptions = {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n          },\n          body: JSON.stringify(setReadby)\n        };\n        fetch(\"http://localhost:3000/api/posts/\" + id, requestOptions).then(function (res) {\n          return res.json().then(function (data) {\n            console.log(data);\n            if (res.ok) {\n              _this2.$router.push(\"/home\");\n            }\n          });\n        })[\"catch\"](function (error) {\n          console.error(\"There was an error!\", error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","post","created","getPost","mounted","readCheck","methods","readby","check","includes","JSON","parse","localStorage","getItem","userId","console","log","getImage","image","id","window","location","href","split","pop","requestOptions","method","headers","Authorization","token","fetch","then","res","json","error","addReadby","setReadby","userid","postId","body","stringify","ok","$router","push"],"sourceRoot":"","sources":["/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/OnePost.vue"],"sourcesContent":["<template>\n    <div class = \"posts\">\n      <div :key=\"post.postid\" class=\"card\" >\n        <div class=\"card-body\">\n            <i v-if=\"readCheck()\" class=\"fas fa-envelope\" type = \"submit\" id=\"unread\" v-on:click =\"addReadby()\"></i>\n            <h4 class=\"card-title\"><strong>{{ post.title }}</strong></h4>\n            <h5 class=\"card-subtitle mb-4 text-strong\">posted by {{ post.author }}</h5>\n            <p class=\"card-text mb-4\">{{ post.posttext }}</p>\n                <div class=\"card-img\">\n                  <img v-bind:src=\"post.image\"/>\n                </div>\n            <p class=\"card-subtitle text-muted\">{{ post.creationdate }}</p>\n        </div>\n      </div>  \n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n      return {\n        post: {}\n      }\n    },\n    created() {\n      this.getPost()\n    },\n    mounted() {\n        this.readCheck()\n    },\n    methods: {   \n        readCheck() {\n            if (this.post.readby != null) {\n                const check = this.post.readby.includes(JSON.parse(localStorage.getItem(\"user\")).userId);\n                console.log(check)\n                return !check\n            }\n        },\n        getImage() {\n            return `/backend/images/${post.image}`\n        },\n        getPost() {\n            let id = window.location.href.split('/').pop()\n            const requestOptions = {\n              method: \"GET\",\n              headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n              }, \n          }\n          fetch(\"http://localhost:3000/api/posts/one/\" + id, requestOptions)\n            .then((res) => {\n                return res.json()\n            .then((data) => {\n                this.post = data[0];\n                console.log(data);\n                });\n            })\n            .catch((error) => {\n                console.error(\"There was an error!\", error);\n            });\n        },\n        addReadby() {\n            let setReadby = []\n            let userId = JSON.parse(localStorage.getItem(\"user\")).userid\n            let id = window.location.href.split('/').pop()\n            console.log(id)\n            if (JSON.parse(localStorage.getItem(\"user\")).userid === this.userid) {\n                setReadby = {\n                    readby: userId,\n                    postId: id\n                }\n            \n            const requestOptions = {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,   \n                }, \n                body: JSON.stringify(setReadby),\n            };\n            fetch(\"http://localhost:3000/api/posts/\" + id,  requestOptions)\n                .then((res) => {\n                    return res.json()\n                .then((data) => {\n                    console.log(data);\n                        if (res.ok) {\n                            this.$router.push(\"/home\");\n                        }\n                    });\n                })\n                .catch((error) => {\n                    console.error(\"There was an error!\", error);\n                });\n            }\n        \n        }\n    }\n}\n</script>\n\n\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n.card {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 5rem 5rem 0 23rem;\n    width: 45%;\n    background: linear-gradient(to bottom right, #9ea5f4, #ffffff);\n    box-shadow: 6px 6px 3px rgba(65, 64, 64, 0.867);\n}\ni {\n    display: inline-block;\n    position: absolute;\n    margin-left: 85%;\n    padding: .5rem;\n}\n.card-body {\n    padding: 2rem;\n}\nimg {\n    height: auto;\n    width: 100%;\n    margin: .5rem;\n    object-fit: cover;\n}\n@media screen and (max-width: 768px) {\n    .card {\n        display: flex;\n        justify-content: center;\n        margin: .5rem;\n        width: 95%;\n        box-shadow: none;\n    }\n    i {\n        margin-left: 75%;\n        padding: 0;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}