{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport HeaderLogo from '../components/HeaderLogo.vue';\nexport default {\n  data: function data() {\n    return {\n      title: \"\",\n      author: \"\",\n      postText: \"\",\n      image: \"\",\n      file: \"\",\n      fileSource: \"\"\n    };\n  },\n  created: function created() {\n    this.createPost();\n  },\n  methods: {\n    getImage: function getImage() {\n      this.file = this.$refs.file.files[0];\n      this.fileSource = URL.createObjectURL(this.$refs.file.files[0]);\n    },\n    createPost: function createPost() {\n      var _this = this;\n      var formData = [];\n      var requestOptions = {};\n      var post = {};\n      if (this.file != null) {\n        post = JSON.stringify({\n          title: this.title,\n          author: this.author,\n          postText: this.postText\n        });\n        formData = new FormData();\n        formData.set('file', this.file);\n        formData.set('post', post);\n        console.log(formData.post);\n        requestOptions = {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n          },\n          body: formData\n        };\n      } else {\n        formData = {\n          title: this.title,\n          author: this.author,\n          postText: this.postText\n        };\n        requestOptions = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n          },\n          body: JSON.stringify(formData)\n        };\n      }\n      if (this.title && this.author && this.postText != null) {\n        fetch(\"http://localhost:3000/api/posts/\", requestOptions).then(function (res) {\n          return res.json().then(function (data) {\n            if (res.ok) {\n              _this.$router.push(\"/home\");\n              alert('post created successfully');\n            }\n          });\n        })[\"catch\"](function (error) {\n          console.error('There was an error!', error);\n        });\n      }\n    }\n  },\n  components: {\n    HeaderLogo: HeaderLogo\n  }\n};","map":{"version":3,"mappings":"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","names":["HeaderLogo","data","title","author","postText","image","file","fileSource","created","createPost","methods","getImage","$refs","files","URL","createObjectURL","formData","requestOptions","post","JSON","stringify","FormData","set","console","log","method","headers","Authorization","parse","localStorage","getItem","token","body","fetch","then","res","json","ok","$router","push","alert","error","components"],"sourceRoot":"","sources":["/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/AddPost.vue"],"sourcesContent":["<template>\n    <div>\n        <header-logo />\n        <RouterLink to=\"/home\">\n            <button class=\"btn btn-primary btn-med\" id=\"home_btn\" role=\"button\"><strong>Home</strong></button>\n        </RouterLink>\n        <div class=\"col-md-4\">\n            <h2 class=\"addPost_header\"><strong>Create a Post</strong></h2>\n            <form class=\"addpost_form\">\n                <label for=\"firstName-input\" class=\"form-label\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"author\" placeholder=\"Name\" maxlength=\"15\" v-model=\"author\" required />\n                <label for=\"title-input\" class=\"form-label\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Title\" minlength=\"3\" v-model=\"title\" required />\n                <label for=\"postText-input\" class=\"form-label\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"postText\" placeholder=\"Write post\" minlength=\"25\" v-model=\"postText\" required />\n                <div id=\"file\">\n                    <input type=\"file\" accept=\"image/*\" ref=\"file\" @change=\"getImage\" />\n                </div>\n                <img v-if=\"file\" class=\"image\" :src=\"fileSource\" />\n                <button type=\"submit\" id=\"create_post_btn\" v-on:click.prevent=\"createPost()\">Create Post</button>\n            </form>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport HeaderLogo from '../components/HeaderLogo.vue';\n\nexport default {\n    data() {\n        return {\n            title: \"\",\n            author: \"\",\n            postText: \"\",\n            image: \"\",\n            file: \"\",\n            fileSource: \"\",\n        };\n    },\n    created() {\n        this.createPost()\n    },\n    methods: {\n        getImage() {\n            this.file = this.$refs.file.files[0];\n            this.fileSource = URL.createObjectURL(this.$refs.file.files[0]);\n        },\n\n        createPost() {\n            let formData = [];\n            let requestOptions = {};\n            let post = {};\n\n            if (this.file != null) {\n                post = JSON.stringify({\n                    title: this.title,\n                    author: this.author,\n                    postText: this.postText,\n                });\n\n                formData = new FormData();\n                formData.set('file', this.file);\n                formData.set('post', post);\n                console.log(formData.post);\n\n                requestOptions = {\n                    method: \"POST\",\n                    headers: {\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                    },\n                    body: formData,\n                }\n            } else {\n                formData = {\n                    title: this.title,\n                    author: this.author,\n                    postText: this.postText\n                };\n\n                requestOptions = {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                    },\n                    body: JSON.stringify(formData),\n                };\n            }\n            if (this.title && this.author && this.postText != null) {\n                fetch(\"http://localhost:3000/api/posts/\", requestOptions)\n                .then((res) => {\n                    return res.json()\n                    .then((data) => {\n                        if (res.ok) {\n                            this.$router.push(\"/home\");\n                            alert('post created successfully')\n                        }\n                    });\n                })\n                .catch((error) => {\n                    console.error('There was an error!', error);\n                });\n            }\n        }\n\n    },\n    components: {\n        HeaderLogo\n    }\n};\n</script>\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nlabel, input {\n    padding: .5rem;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}