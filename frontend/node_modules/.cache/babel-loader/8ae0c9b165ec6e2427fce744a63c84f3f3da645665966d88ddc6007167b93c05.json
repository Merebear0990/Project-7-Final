{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-66e271b4\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"posts\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_3 = {\n  \"class\": \"card-title\"\n};\nvar _hoisted_4 = {\n  \"class\": \"card-subtitle mb-4 text-strong\"\n};\nvar _hoisted_5 = {\n  \"class\": \"card-text mb-4\"\n};\nvar _hoisted_6 = {\n  \"class\": \"card-img\"\n};\nvar _hoisted_7 = [\"src\"];\nvar _hoisted_8 = {\n  \"class\": \"card-subtitle text-muted\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"div\", {\n    key: $data.post.postid,\n    \"class\": \"card\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [$options.readCheck() ? (_openBlock(), _createElementBlock(\"i\", {\n    key: 0,\n    \"class\": \"fas fa-envelope\",\n    type: \"submit\",\n    id: \"unread\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.addReadby();\n    })\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h4\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString($data.post.title), 1 /* TEXT */)]), _createElementVNode(\"h5\", _hoisted_4, \"posted by \" + _toDisplayString($data.post.author), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.post.posttext), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $data.post.image\n  }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($data.post.creationdate), 1 /* TEXT */)])]))]);\n}","map":{"version":3,"mappings":";;;;;EACS,SAAQ;AAAO;;EAEX,SAAM;AAAW;;EAEd,SAAM;AAAY;;EAClB,SAAM;AAAgC;;EACvC,SAAM;AAAgB;;EAChB,SAAM;AAAU;;;EAGtB,SAAM;AAA0B;;uBAV3CA,oBAaM,OAbNC,UAaM,kBAZJD,oBAWM;IAXAE,GAAG,EAAEC,UAAI,CAACC,MAAM;IAAE,SAAM;MAC5BC,oBASM,OATNC,UASM,GAROC,kBAAS,oBAAlBP,oBAAwG;;IAAlF,SAAM,iBAAiB;IAACQ,IAAI,EAAG,QAAQ;IAACC,EAAE,EAAC,QAAQ;IAAMC,OAAK;MAAA,OAAGH,kBAAS;IAAA;2CAChGF,oBAA6D,MAA7DM,UAA6D,GAAtCN,oBAAiC,iCAAtBF,UAAI,CAACS,KAAK,oBAC5CP,oBAA2E,MAA3EQ,UAA2E,EAAhC,YAAU,oBAAGV,UAAI,CAACW,MAAM,kBACnET,oBAAiD,KAAjDU,UAAiD,mBAApBZ,UAAI,CAACa,QAAQ,kBACtCX,oBAEM,OAFNY,UAEM,GADJZ,oBAA8B;IAAlBa,GAAG,EAAEf,UAAI,CAACgB;yCAE5Bd,oBAA+D,KAA/De,UAA+D,mBAAxBjB,UAAI,CAACkB,YAAY","names":["_createElementBlock","_hoisted_1","key","$data","postid","_createElementVNode","_hoisted_2","$options","type","id","onClick","_hoisted_3","title","_hoisted_4","author","_hoisted_5","posttext","_hoisted_6","src","image","_hoisted_8","creationdate"],"sourceRoot":"","sources":["/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/OnePost.vue"],"sourcesContent":["<template>\n    <div class = \"posts\">\n      <div :key=\"post.postid\" class=\"card\" >\n        <div class=\"card-body\">\n            <i v-if=\"readCheck()\" class=\"fas fa-envelope\" type = \"submit\" id=\"unread\" v-on:click =\"addReadby()\"></i>\n            <h4 class=\"card-title\"><strong>{{ post.title }}</strong></h4>\n            <h5 class=\"card-subtitle mb-4 text-strong\">posted by {{ post.author }}</h5>\n            <p class=\"card-text mb-4\">{{ post.posttext }}</p>\n                <div class=\"card-img\">\n                  <img v-bind:src=\"post.image\"/>\n                </div>\n            <p class=\"card-subtitle text-muted\">{{ post.creationdate }}</p>\n        </div>\n      </div>  \n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n      return {\n        post: {}\n      }\n    },\n    created() {\n      this.getPost()\n    },\n    mounted() {\n        this.readCheck()\n    },\n    methods: {   \n        readCheck() {\n            if (this.post.readby != null) {\n                const check = this.post.readby.includes(JSON.parse(localStorage.getItem(\"user\")).userId);\n                console.log(check)\n                return !check\n            }\n        },\n        getImage() {\n            return `/backend/images/${post.image}`\n        },\n        getPost() {\n            let id = window.location.href.split('/').pop()\n            const requestOptions = {\n              method: \"GET\",\n              headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n              }, \n          }\n          fetch(\"http://localhost:3000/api/posts/one/\" + id, requestOptions)\n            .then((res) => {\n                return res.json()\n            .then((data) => {\n                this.post = data[0];\n                console.log(data);\n                });\n            })\n            .catch((error) => {\n                console.error(\"There was an error!\", error);\n            });\n        },\n        addReadby() {\n            let setReadby = []\n            let userId = JSON.parse(localStorage.getItem(\"user\")).userid\n            let id = window.location.href.split('/').pop()\n            console.log(id)\n            if (JSON.parse(localStorage.getItem(\"user\")).userid === this.userid) {\n                setReadby = {\n                    readby: userId,\n                    postId: id\n                }\n            \n            const requestOptions = {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,   \n                }, \n                body: JSON.stringify(setReadby),\n            };\n            fetch(\"http://localhost:3000/api/posts/\" + id,  requestOptions)\n                .then((res) => {\n                    return res.json()\n                .then((data) => {\n                    console.log(data);\n                        if (res.ok) {\n                            this.$router.push(\"/home\");\n                        }\n                    });\n                })\n                .catch((error) => {\n                    console.error(\"There was an error!\", error);\n                });\n            }\n        \n        }\n    }\n}\n</script>\n\n\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n.card {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 5rem 5rem 0 23rem;\n    width: 45%;\n    background: linear-gradient(to bottom right, #9ea5f4, #ffffff);\n    box-shadow: 6px 6px 3px rgba(65, 64, 64, 0.867);\n}\ni {\n    display: inline-block;\n    position: absolute;\n    margin-left: 85%;\n    padding: .5rem;\n}\n.card-body {\n    padding: 2rem;\n}\nimg {\n    height: auto;\n    width: 100%;\n    margin: .5rem;\n    object-fit: cover;\n}\n@media screen and (max-width: 768px) {\n    .card {\n        display: flex;\n        justify-content: center;\n        margin: .5rem;\n        width: 95%;\n        box-shadow: none;\n    }\n    i {\n        margin-left: 75%;\n        padding: 0;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}