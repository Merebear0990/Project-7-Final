{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      posts: []\n    };\n  },\n  created: function created() {\n    this.fetchPosts();\n  },\n  methods: {\n    getImage: function getImage() {\n      return \"/backend/images/\".concat(post.image);\n    },\n    fetchPosts: function fetchPosts() {\n      var _this = this;\n      var requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n        }\n      };\n      fetch(\"http://localhost:3000/api/posts/\", requestOptions).then(function (res) {\n        return res.json().then(function (data) {\n          _this.posts = data;\n          console.log(data);\n        });\n      })[\"catch\"](function (error) {\n        console.error(\"There was an error!\", error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAiBA,eAAe;EACXA,IAAI,kBAAG;IACH,OAAO;MACHC,KAAK,EAAE;IAEX;EACJ,CAAC;EACDC,OAAO,qBAAG;IACN,IAAI,CAACC,UAAU,EAAC;EACpB,CAAC;EAEDC,OAAO,EAAE;IACLC,QAAQ,sBAAG;MACP,iCAA0BC,IAAI,CAACC,KAAK;IACxC,CAAC;IACDJ,UAAU,wBAAG;MAAA;MACT,IAAMK,cAAa,GAAI;QACnBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,SAAQ,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;QACxE;MACJ,CAAC;MACLC,KAAK,CAAC,kCAAkC,EAAET,cAAc,EACnDU,IAAI,CAAC,UAACC,GAAG,EAAK;QACX,OAAOA,GAAG,CAACC,IAAI,EAAC,CACnBF,IAAI,CAAC,UAAClB,IAAI,EAAK;UACZ,KAAI,CAACC,KAAI,GAAID,IAAI;UACjBqB,OAAO,CAACC,GAAG,CAACtB,IAAI,CAAC;QACjB,CAAC,CAAC;MACN,CAAC,UACK,CAAC,UAACuB,KAAK,EAAK;QACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACJ;AACJ","names":["data","posts","created","fetchPosts","methods","getImage","post","image","requestOptions","method","headers","Authorization","JSON","parse","localStorage","getItem","token","fetch","then","res","json","console","log","error"],"sourceRoot":"","sources":["/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/PostCard.vue"],"sourcesContent":["<template>\n    <div v-for=\"post in posts\" :key=\"post.postid\" class=\"card\">\n        <div class=\"card-body\">\n            <RouterLink :to=\"{ path: '/' + post.postid }\">\n                <h4 class=\"card-title\"><strong>{{ post.title }}</strong></h4>\n            </RouterLink>\n                <h5 class=\"card-subtitle mb-4 text-strong\">posted by {{ post.author }}</h5>\n                <p class=\"card-text mb-4\">{{ post.posttext }}</p>\n                    <div class=\"card-img\">\n                        <img v-bind:src=\"post.image\" />\n                    </div>\n                <p class=\"card-subtitle text-muted\">{{ post.creationdate }}</p>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            posts: [],\n            \n        }\n    },\n    created() {\n        this.fetchPosts()\n    },\n    \n    methods: {\n        getImage() {\n            return `/backend/images/${post.image}`\n        },\n        fetchPosts() {\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                }, \n            };\n        fetch(\"http://localhost:3000/api/posts/\", requestOptions)\n            .then((res) => {\n                return res.json()\n            .then((data) => {\n                this.posts = data;\n                console.log(data);\n                });\n            })\n            .catch((error) => {\n                console.error(\"There was an error!\", error);\n            });\n        },\n    },\n}\n</script>\n\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n.card {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 5rem 5rem 0 23rem;\n    width: 45%;\n    background: linear-gradient(to bottom right, #9ea5f4, #ffffff);\n    box-shadow: 6px 6px 3px rgba(65, 64, 64, 0.867);\n}\ni {\n    display: inline-block;\n    position: absolute;\n    margin-left: 85%;\n    padding: .5rem;\n}\n.card-body {\n    padding: 2rem;\n}\nimg {\n    height: auto;\n    width: 100%;\n    margin: .5rem;\n    object-fit: cover;\n}\n@media screen and (max-width: 768px) {\n    .card {\n        display: flex;\n        justify-content: center;\n        margin: .5rem;\n        width: 95%;\n        box-shadow: none;\n    }\n    i {\n        margin-left: 75%;\n        padding: 0;\n    }\n}\n</style>\nFooter\nÂ© 2022 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}