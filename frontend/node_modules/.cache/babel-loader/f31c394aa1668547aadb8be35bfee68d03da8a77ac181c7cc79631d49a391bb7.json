{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-040ef000\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-title\"\n};\nvar _hoisted_3 = {\n  \"class\": \"card-subtitle mb-4 text-strong\"\n};\nvar _hoisted_4 = {\n  \"class\": \"card-text mb-4\"\n};\nvar _hoisted_5 = {\n  \"class\": \"card-img\"\n};\nvar _hoisted_6 = [\"src\"];\nvar _hoisted_7 = {\n  \"class\": \"card-subtitle text-muted\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_RouterLink = _resolveComponent(\"RouterLink\");\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, function (post) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.postid,\n      \"class\": \"card\"\n    }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_RouterLink, {\n      to: {\n        path: '/' + post.postid\n      }\n    }, {\n      \"default\": _withCtx(function () {\n        return [_createElementVNode(\"h4\", _hoisted_2, [_createElementVNode(\"strong\", null, _toDisplayString(post.title), 1 /* TEXT */)])];\n      }),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"h5\", _hoisted_3, \"posted by \" + _toDisplayString(post.author), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(post.posttext), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n      src: post.image\n    }, null, 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(post.creationdate), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;EAEa,SAAM;AAAW;;EAEV,SAAM;AAAY;;EAElB,SAAM;AAAgC;;EACvC,SAAM;AAAgB;;EAChB,SAAM;AAAU;;;EAGtB,SAAM;AAA0B;;;2BAV/CA,oBAYMC,6BAZcC,WAAK,YAAbC,IAAI;yBAAhBH,oBAYM;MAZsBI,GAAG,EAAED,IAAI,CAACE,MAAM;MAAE,SAAM;QAChDC,oBAUM,OAVNC,UAUM,GATFC,aAEaC;MAFAC,EAAE;QAAAC,YAAgBR,IAAI,CAACE;MAAM;;0BACtC;QAAA,OAA6D,CAA7DC,oBAA6D,MAA7DM,UAA6D,GAAtCN,oBAAiC,iCAAtBH,IAAI,CAACU,KAAK;;;;iDAE5CP,oBAA2E,MAA3EQ,UAA2E,EAAhC,YAAU,oBAAGX,IAAI,CAACY,MAAM,kBACnET,oBAAiD,KAAjDU,UAAiD,mBAApBb,IAAI,CAACc,QAAQ,kBACtCX,oBAEM,OAFNY,UAEM,GADFZ,oBAA+B;MAAnBa,GAAG,EAAEhB,IAAI,CAACiB;2CAE9Bd,oBAA+D,KAA/De,UAA+D,mBAAxBlB,IAAI,CAACmB,YAAY","names":["_createElementBlock","_Fragment","$data","post","key","postid","_createElementVNode","_hoisted_1","_createVNode","_component_RouterLink","to","path","_hoisted_2","title","_hoisted_3","author","_hoisted_4","posttext","_hoisted_5","src","image","_hoisted_7","creationdate"],"sourceRoot":"","sources":["/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/PostCard.vue"],"sourcesContent":["<template>\n    <div v-for=\"post in posts\" :key=\"post.postid\" class=\"card\">\n        <div class=\"card-body\">\n            <RouterLink :to=\"{ path: '/' + post.postid }\">\n                <h4 class=\"card-title\"><strong>{{ post.title }}</strong></h4>\n            </RouterLink>\n                <h5 class=\"card-subtitle mb-4 text-strong\">posted by {{ post.author }}</h5>\n                <p class=\"card-text mb-4\">{{ post.posttext }}</p>\n                    <div class=\"card-img\">\n                        <img v-bind:src=\"post.image\" />\n                    </div>\n                <p class=\"card-subtitle text-muted\">{{ post.creationdate }}</p>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            posts: [],\n            \n        }\n    },\n    created() {\n        this.fetchPosts()\n    },\n    \n    methods: {\n        getImage() {\n            return `/backend/images/${post.image}`\n        },\n        fetchPosts() {\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                }, \n            };\n        fetch(\"http://localhost:3000/api/posts/\", requestOptions)\n            .then((res) => {\n                return res.json()\n            .then((data) => {\n                this.posts = data;\n                console.log(data);\n                });\n            })\n            .catch((error) => {\n                console.error(\"There was an error!\", error);\n            });\n        },\n    },\n}\n</script>\n\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n.card {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 5rem 5rem 0 23rem;\n    width: 45%;\n    background: linear-gradient(to bottom right, #9ea5f4, #ffffff);\n    box-shadow: 6px 6px 3px rgba(65, 64, 64, 0.867);\n}\ni {\n    display: inline-block;\n    position: absolute;\n    margin-left: 85%;\n    padding: .5rem;\n}\n.card-body {\n    padding: 2rem;\n}\nimg {\n    height: auto;\n    width: 100%;\n    margin: .5rem;\n    object-fit: cover;\n}\n@media screen and (max-width: 768px) {\n    .card {\n        display: flex;\n        justify-content: center;\n        margin: .5rem;\n        width: 95%;\n        box-shadow: none;\n    }\n    i {\n        margin-left: 75%;\n        padding: 0;\n    }\n}\n</style>\nFooter\nÂ© 2022 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}