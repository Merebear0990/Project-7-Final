[{"/Users/stevengalarza/Webcodes/Project-7/frontend/src/main.js":"1","/Users/stevengalarza/Webcodes/Project-7/frontend/src/App.vue":"2","/Users/stevengalarza/Webcodes/Project-7/frontend/src/router/index.js":"3","/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/OnePost.vue":"4","/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/Profile.vue":"5","/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/AddPost.vue":"6","/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/Home.vue":"7","/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/SignUp.vue":"8","/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/HeaderLogo.vue":"9","/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/OnePost.vue":"10"},{"size":268,"mtime":1672195801554,"results":"11","hashOfConfig":"12"},{"size":272,"mtime":1672192669709,"results":"13","hashOfConfig":"12"},{"size":901,"mtime":1671597505498,"results":"14","hashOfConfig":"12"},{"size":500,"mtime":1671596523676,"results":"15","hashOfConfig":"12"},{"size":3913,"mtime":1671495406613,"results":"16","hashOfConfig":"12"},{"size":4042,"mtime":1671595889854,"results":"17","hashOfConfig":"12"},{"size":1257,"mtime":1671496878265,"results":"18","hashOfConfig":"12"},{"size":4379,"mtime":1671974188398,"results":"19","hashOfConfig":"12"},{"size":4783,"mtime":1671975112812,"results":"20","hashOfConfig":"12"},{"size":4064,"mtime":1671975241129,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17p1icq",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/stevengalarza/Webcodes/Project-7/frontend/src/main.js",[],"/Users/stevengalarza/Webcodes/Project-7/frontend/src/App.vue",[],"/Users/stevengalarza/Webcodes/Project-7/frontend/src/router/index.js",[],"/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/OnePost.vue",[],"/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/Profile.vue",["47"],"<template>\n    <HeaderLogo />\n    <RouterLink to=\"/home\">\n        <button class=\"btn btn-primary btn-med\" id=\"home-btn\" role=\"button\"><strong>Home</strong></button>\n    </RouterLink>\n    <button class=\"btn btn-primary btn-lg\" id=\"delete_account_btn\" v-on:click.prevent=\"deleteAccount()\"\n        role=\"button\"><strong>Delete Account</strong></button>\n    <div class=\"posts\">\n        <div v-for=\"post in posts\" :key=\"post.userid\" class=\"card\">\n            <div class=\"card-body\">\n                <h4 class=\"card-title\"><strong>{{ post.title }}</strong></h4>\n                <h5 class=\"card-subtitle mb-4 text-strong\">posted by {{ post.author }}</h5>\n                <p class=\"card-text mb-4\">{{ post.posttext }}</p>\n                <div class=\"card-img\">\n                    <img v-bind:src=\"post.image\" />\n                </div>\n                <p class=\"card-subtitle text-muted\">{{ post.creationdate }}</p>\n            </div>\n        </div>\n    </div>\n    <RouterView />\n</template>\n\n<script>\nimport HeaderLogo from '@/components/HeaderLogo.vue';\n\nexport default {\n    data() {\n        return {\n            posts: []\n        }\n    },\n    created() {\n        this.getPosts()\n    },\n\n    methods: {\n        getPosts() {\n            const userId = JSON.parse(localStorage.getItem(\"user\")).userId\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                },\n            }\n\n            fetch(\"http://localhost:3000/api/posts/\" + userId, requestOptions)\n                .then((res) => {\n                    return res.json()\n                        .then((data) => {\n                            this.posts = data;\n                            console.log(data);\n                        });\n                })\n                .catch((error) => {\n                    console.error(\"There was an error!\", error);\n                });\n        },\n        deleteAccount() {\n            const requestOptions = {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                },\n            };\n            fetch(\"http://localhost:3000/api/users/\" + JSON.parse(localStorage.getItem(\"user\")).userId, requestOptions)\n                .then((res) => {\n                    return res.json()\n                        .then((data) => {\n                            console.log(data);\n                            if (res.ok) {\n                                this.$router.push(\"/\");\n                                alert(\"Your account has been deleted\");\n                            }\n                        });\n                })\n                .catch((error) => {\n                    console.error(\"There was an error!\", error);\n                });\n        },\n    },\n\n    components: {\n        HeaderLogo,\n\n    }\n}\n\n\n\n</script>\n\n\n<style scoped>\n#home_btn {\n    margin: 2rem 0 4rem 8rem;\n    font-size: 18px;\n}\n\n#delete_account_btn {\n    margin: 2rem 0 4rem 3rem;\n    font-size: 16px;\n}\n\n.card {\n    margin-left: 22rem;\n    margin-bottom: 2rem;\n    width: 50%;\n}\n.card-body {\n    background: linear-gradient(to bottom right, #9ea5f4, #fff);\n    box-shadow: 6px 6px 3px rgba(65, 64, 64, 0.867);\n    padding: 2rem;\n    width: 100%;\n}\n\nimg {\n    height: auto;\n    width: 100%;\n    margin-bottom: 1rem;\n}\n@media screen and (max-width: 768px) {\n    #home_btn {\n        margin: 1rem 0 2rem 3rem;\n        font-size: 18px;\n    }\n\n    #delete_account_btn {\n        margin: 1rem 0 2rem 1rem;\n        font-size: 16px;\n    }\n    .card {\n        display: flex;\n        justify-content: center;\n        margin: .5rem;\n        width: 95%;\n        box-shadow: none;\n    }\n}\n\n</style>","/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/AddPost.vue",["48"],"<template>\n    <div>\n        <header-logo />\n        <RouterLink to=\"/home\">\n            <button class=\"btn btn-primary btn-med\" id=\"home_btn\" role=\"button\"><strong>Home</strong></button>\n        </RouterLink>\n        <div class=\"col-md-4\">\n            <h2 class=\"addPost_header\"><strong>Create a Post</strong></h2>\n            <form class=\"addpost_form\">\n                <label for=\"firstName-input\" class=\"form-label\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"author\" placeholder=\"Name\" maxlength=\"15\" v-model=\"author\" required />\n                <label for=\"title-input\" class=\"form-label\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Title\" minlength=\"3\" v-model=\"title\" required />\n                <label for=\"postText-input\" class=\"form-label\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"postText\" placeholder=\"Write post\" minlength=\"25\" v-model=\"postText\" required />\n                <div id=\"file\">\n                    <input type=\"file\" accept=\"image/*\" ref=\"file\" @change=\"getImage\" />\n                </div>\n                <img v-if=\"file\" class=\"image\" :src=\"fileSource\" />\n                <button type=\"submit\" id=\"create_post_btn\" v-on:click.prevent=\"createPost()\">Create Post</button>\n            </form>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport HeaderLogo from '../components/HeaderLogo.vue';\n\nexport default {\n    data() {\n        return {\n            title: \"\",\n            author: \"\",\n            postText: \"\",\n            image: \"\",\n            file: \"\",\n            fileSource: \"\",\n        };\n    },\n    created() {\n        this.createPost()\n    },\n    methods: {\n        getImage() {\n            this.file = this.$refs.file.files[0];\n            this.fileSource = URL.createObjectURL(this.$refs.file.files[0]);\n        },\n\n        createPost() {\n            let formData = [];\n            let requestOptions = {};\n            let post = {};\n\n            if (this.file != null) {\n                post = JSON.stringify({\n                    title: this.title,\n                    author: this.author,\n                    postText: this.postText,\n                });\n\n                formData = new FormData();\n                formData.set('file', this.file);\n                formData.set('post', post);\n                console.log(formData.post);\n\n                requestOptions = {\n                    method: \"POST\",\n                    headers: {\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                    },\n                    body: formData,\n                }\n            } else {\n                formData = {\n                    title: this.title,\n                    author: this.author,\n                    postText: this.postText\n                };\n\n                requestOptions = {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n                    },\n                    body: JSON.stringify(formData),\n                };\n            }\n            if (this.title && this.author && this.postText != null) {\n                fetch(\"http://localhost:3000/api/posts/\", requestOptions)\n                .then((res) => {\n                    return res.json()\n                    .then((data) => {\n                        if (res.ok) {\n                            this.$router.push(\"/home\");\n                            alert('post created successfully')\n                        }\n                    });\n                })\n                .catch((error) => {\n                    console.error('There was an error!', error);\n                });\n            }\n        }\n\n    },\n    components: {\n        HeaderLogo\n    }\n};\n</script>\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nlabel, input {\n    padding: .5rem;\n}\n</style>","/Users/stevengalarza/Webcodes/Project-7/frontend/src/views/Home.vue",["49"],"<template>\n    <div>\n        <HeaderLogo />\n        <div class=\"navigation-btns\">\n            <router-link to=\"/addpost\">\n                <button class=\"btn btn-primary btn-med text-strong\" id=\"btn_profile\" role=\"button\"><strong>Add\n                        Post</strong></button>\n            </router-link>\n            <RouterLink to=\"/profile\">\n                <button class=\"btn btn-secondary btn-med text-strong\" id=\"btn_profile\"\n                    role=\"button\"><strong>Profile</strong></button>\n            </RouterLink>\n        </div>\n        <PostCard />\n        <RouterView />\n    </div>\n</template>\n\n<script>\n\nimport PostCard from '@/components/PostCard.vue';\nimport HeaderLogo from \"../components/HeaderLogo.vue\"\n\nexport default {\n    data() {\n        return {\n            login: {\n                email: \"\",\n                password: \"\",\n            }\n        };\n    },\n    components: {\n        PostCard,\n        HeaderLogo\n    }\n}\n</script>\n\n<style scoped>\n\n#btn_addPost {\n    margin: 2rem 0 0 8rem;\n}\n#btn_profile {\n    margin: 2rem 0 0 3rem;\n}\n\n@media screen and (max-width: 768px) {\n    #btn_addPost {\n        margin-left: 18%;\n    }\n\n    #btn_profile,\n    #btn_addPost {\n        margin-top: 0;\n        margin-bottom: 1rem;\n    }\n}\n</style>","/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/SignUp.vue",["50","51"],"<template>\n    <div>\n      <header-logo/>\n      <div class=\"col-md-4\">\n        <form class =\"signup_form\">\n          <label for =\"firstName-input\" class = \"form-label\"></label>\n            <input type=\"text\" class=\"form-control\" id = \"signup_firstName\" placeholder=\"First Name\" maxlength=\"15\" v-model=\"firstName\" required/> \n          <label for =\"lastName-input\" class = \"form-label\"></label>\n            <input type = \"text\" class=\"form-control\" id = \"signup_lastName\" placeholder=\"Last Name\" maxlength = \"20\" v-model=\"lastName\" required />\n          <label for =\"email-input\" class = \"form-label\"></label>\n            <input type = \"text\" class=\"form-control\" id = \"signup_email\" placeholder= \"Email\" minlength=\"10\" v-on:change=\"emailValidation()\" v-model=\"email\" required />\n          <label for = \"password-input\" class = \"form-label\"></label>\n            <input type = \"text\" class=\"form-control\" id = \"signup_password\" placeholder = \"Password\" minlength=\"8\" v-on:change=\"passwordValidation()\" v-model=\"password\" required/>\n          <router-link to = \"/\">\n            <input type=\"submit\" id = \"signup_btn_2\" v-on:click =\"SignUp()\" value = \"Sign Up\"/>\n          </router-link>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  \n  <script>\n  import HeaderLogo from './HeaderLogo.vue';\n  export default {\n    name: \"SignUp\",\n    data() {\n      return {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        passConditions: {\n          email: false,\n          password: false\n        }\n      };\n    },\n    watch: {\n      password() {\n        this.passwordValidation()\n      },\n      email() {\n        this.emailValidation()\n      }\n    },\n   \n    methods: {\n      passwordValidation() {\n        let password = this.password;\n        // console.log(password)\n        let passwordRegEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n        // console.log(passwordRegEx.test(password))\n        if (passwordRegEx.test(password)) {\n          this.passConditions.password = true \n          // console.log(this.passConditions)\n        } else {\n          this.passConditions.password = false\n        }\n        //Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\n      },\n      emailValidation() {\n        let email = this.email;\n        let emailRegEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\n        if (emailRegEx.test(email)) {\n          this.passConditions.email = true \n        } else {\n          this.passConditions.email = false\n        }\n      },\n      SignUp() {\n        const signUpForm = {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email,\n          password: this.password\n        }\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n          \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(signUpForm),\n        };\n        if (this.passConditions.password && this.passConditions.email === true) {\n          fetch(\"http://localhost:3000/api/users/signup\", requestOptions)\n            .then((response) => {\n              return response.json();\n            })\n            .then((data) => {\n              console.log(data);\n              if (response.ok) {\n                // localStorage.setItem('token', res.data.token);\n                this.$router.push(\"/\");\n              }\n            })\n            .catch((error) => {\n              error: error;\n            })\n          }\n        }\n      },\n    \n    components: { \n      HeaderLogo\n    }\n  }\n  </script>\n\n<style scoped>\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\nlabel, input {\n  padding: .5rem;\n  text-align: center;\n  font-weight: 500;\n  font-size: medium;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 6rem 0 0 16rem;\n}\n#signup_btn_2 {\n  font-weight: bold;\n  font-style: normal;\n  cursor: pointer;\n  border-radius: 25px;\n  padding: .5rem;\n  width: 14rem;\n  margin: 4rem 0 0 9.7rem; \n  font-size: 18px;\n  color: black;\n  border: none;\n  box-shadow: 5px 5px 5px gray;\n  background: linear-gradient(to bottom right, #8521dd, #be5deb); \n}\n    \n@media screen and (max-width: 768px) {\n  form {\n    width: 90%;\n    margin: 1rem 0 0 1rem;\n  }\n  #signup_btn_2 {\n    margin: 1rem 0 0 3rem;\n    box-shadow: none;\n  }\n}\n</style>","/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/HeaderLogo.vue",[],"/Users/stevengalarza/Webcodes/Project-7/frontend/src/components/OnePost.vue",["52"],"<template>\n    <div class = \"posts\">\n      <div :key=\"post.postid\" class=\"card\" >\n        <div class=\"card-body\">\n            <i v-if=\"readCheck()\" class=\"fas fa-envelope\" type = \"submit\" id=\"unread\" v-on:click =\"addReadby()\"></i>\n            <h4 class=\"card-title\"><strong>{{ post.title }}</strong></h4>\n            <h5 class=\"card-subtitle mb-4 text-strong\">posted by {{ post.author }}</h5>\n            <p class=\"card-text mb-4\">{{ post.posttext }}</p>\n                <div class=\"card-img\">\n                  <img v-bind:src=\"post.image\"/>\n                </div>\n            <p class=\"card-subtitle text-muted\">{{ post.creationdate }}</p>\n        </div>\n      </div>  \n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n      return {\n        post: {}\n      }\n    },\n    created() {\n      this.getPost()\n    },\n    mounted() {\n        this.readCheck()\n    },\n    methods: {   \n        readCheck() {\n            if (this.post.readby != null) {\n                const check = this.post.readby.includes(JSON.parse(localStorage.getItem(\"user\")).userId);\n                console.log(check)\n                return !check\n            }\n        },\n        getImage() {\n            return `/backend/images/${post.image}`\n        },\n        getPost() {\n            let id = window.location.href.split('/').pop()\n            const requestOptions = {\n              method: \"GET\",\n              headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n              }, \n          }\n          fetch(\"http://localhost:3000/api/posts/one/\" + id, requestOptions)\n            .then((res) => {\n                return res.json()\n            .then((data) => {\n                this.post = data[0];\n                console.log(data);\n                });\n            })\n            .catch((error) => {\n                console.error(\"There was an error!\", error);\n            });\n        },\n        addReadby() {\n            let setReadby = []\n            let userId = JSON.parse(localStorage.getItem(\"user\")).userid\n            let id = window.location.href.split('/').pop()\n            console.log(id)\n            if (JSON.parse(localStorage.getItem(\"user\")).userid === this.userid) {\n                setReadby = {\n                    readby: userId,\n                    postId: id\n                }\n            \n            const requestOptions = {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,   \n                }, \n                body: JSON.stringify(setReadby),\n            };\n            fetch(\"http://localhost:3000/api/posts/\" + id,  requestOptions)\n                .then((res) => {\n                    return res.json()\n                .then((data) => {\n                    console.log(data);\n                        if (res.ok) {\n                            this.$router.push(\"/home\");\n                        }\n                    });\n                })\n                .catch((error) => {\n                    console.error(\"There was an error!\", error);\n                });\n            }\n        \n        }\n    }\n}\n</script>\n\n\n\n<style scoped>\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n.card {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 5rem 5rem 0 23rem;\n    width: 45%;\n    background: linear-gradient(to bottom right, #9ea5f4, #ffffff);\n    box-shadow: 6px 6px 3px rgba(65, 64, 64, 0.867);\n}\ni {\n    display: inline-block;\n    position: absolute;\n    margin-left: 85%;\n    padding: .5rem;\n}\n.card-body {\n    padding: 2rem;\n}\nimg {\n    height: auto;\n    width: 100%;\n    margin: .5rem;\n    object-fit: cover;\n}\n@media screen and (max-width: 768px) {\n    .card {\n        display: flex;\n        justify-content: center;\n        margin: .5rem;\n        width: 95%;\n        box-shadow: none;\n    }\n    i {\n        margin-left: 75%;\n        padding: 0;\n    }\n}\n</style>",{"ruleId":"53","severity":2,"message":"54","line":1,"column":1,"nodeType":null,"messageId":"55"},{"ruleId":"56","severity":2,"message":"57","line":94,"column":28,"nodeType":"58","messageId":"59","endLine":94,"endColumn":32},{"ruleId":"53","severity":2,"message":"60","line":1,"column":1,"nodeType":null,"messageId":"55"},{"ruleId":"61","severity":2,"message":"62","line":92,"column":19,"nodeType":"58","messageId":"63","endLine":92,"endColumn":27},{"ruleId":"64","severity":2,"message":"65","line":98,"column":15,"nodeType":"58","messageId":"66","endLine":98,"endColumn":20,"fix":"67"},{"ruleId":"61","severity":2,"message":"68","line":40,"column":39,"nodeType":"58","messageId":"63","endLine":40,"endColumn":43},"vue/multi-word-component-names","Component name \"Profile\" should always be multi-word.","unexpected","no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","Component name \"Home\" should always be multi-word.","no-undef","'response' is not defined.","undef","no-unused-labels","'error:' is defined but never used.","unused",{"range":"69","text":"70"},"'post' is not defined.",[3494,3501],""]